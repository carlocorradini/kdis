name: check

on:
    push:
        branches:
            - master
        tags:
            - v*
    pull_request:
        branches:
            - master

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    version:
        name: Version
        if: startsWith(github.ref_name, 'v')
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Check Git tag format
              env:
                  KDIS_REF_NAME: ${{ github.ref_name }}
              run: |
                  _tag="$KDIS_REF_NAME"
                  if ! printf "%s\n" "$_tag" | grep -q -P '^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-(alpha|beta|rc)\.(0|[1-9][0-9]*))?$'; then
                    printf '[ERROR]: Git tag (%s) wrong format\n' "$_tag"
                    exit 1
                  fi

    code:
        name: Code
        needs: version
        if: always() && (needs.version.result == 'success' || needs.version.result == 'skipped')
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Python
              uses: actions/setup-python@v4

            - name: Install cmakelang
              run: pip install cmakelang[YAML]

            - name: Check
              run: |
                  chmod u+x ./scripts/check.sh

                  ./scripts/check.sh \
                      --log-level debug

    build:
        name: Build
        needs: code
        if: always() && needs.code.result == 'success'
        strategy:
            fail-fast: true
            matrix:
                # TODO(carlocorradini) Add macos-latest
                os: [ubuntu-latest, windows-latest]
                build: [Debug, Release]
                dis: [5, 6, 7]
                enum: ["TRUE", "FALSE"]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install Doxygen
              uses: ssciwr/doxygen-install@v1

            - name: Configure CMake
              env:
                  KDIS_BUILD_TYPE: ${{ matrix.build }}
                  KDIS_DIS_VERSION: ${{ matrix.dis }}
                  KDIS_USE_ENUM_DESCRIPTORS: ${{ matrix.enum }}
              run: cmake -S . -B ./build "-DCMAKE_BUILD_TYPE:STRING=$KDIS_BUILD_TYPE" "-DDIS_VERSION:STRING=$KDIS_DIS_VERSION" "-DKDIS_USE_ENUM_DESCRIPTORS:BOOL=$KDIS_USE_ENUM_DESCRIPTORS" -DBUILD_SHARED_LIBS:BOOL=FALSE -DKDIS_BUILD_DOCS:BOOL=TRUE -DKDIS_BUILD_EXAMPLES:BOOL=TRUE -DKDIS_BUILD_TESTS:BOOL=TRUE

            - name: Build
              env:
                  KDIS_BUILD_TYPE: ${{ matrix.build }}
              run: cmake --build ./build --config "$KDIS_BUILD_TYPE"

            - name: Test
              env:
                  KDIS_BUILD_TYPE: ${{ matrix.build }}
              run: ctest --verbose --test-dir ./build/tests --build-config "$KDIS_BUILD_TYPE"

            # TODO(carlocorradini) Code coverage
